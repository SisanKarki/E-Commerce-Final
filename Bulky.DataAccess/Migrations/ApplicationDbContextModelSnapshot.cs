// <auto-generated />
using Book.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Book.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Book.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Self-Help"
                        });
                });

            modelBuilder.Entity("Book.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Hiroshi Sakurazaka",
                            CategoryId = 1,
                            Description = "Very Nice Book",
                            ISBN = "978-0-123456-47-2",
                            ListPrice = 29.989999999999998,
                            Price = 27.989999999999998,
                            Price100 = 23.989999999999998,
                            Price50 = 25.989999999999998,
                            Title = "Edge of Tomorrow"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Kip Thorne",
                            CategoryId = 2,
                            Description = "Very Nice Book",
                            ISBN = "978-0-987654-32-1",
                            ListPrice = 35.5,
                            Price = 32.5,
                            Price100 = 28.0,
                            Price50 = 30.0,
                            Title = "Interstellar: The Science"
                        },
                        new
                        {
                            Id = 3,
                            Author = "James Clear",
                            CategoryId = 3,
                            Description = "Very Nice Book",
                            ISBN = "978-0-123456-01-3",
                            ListPrice = 25.0,
                            Price = 23.0,
                            Price100 = 19.0,
                            Price50 = 21.0,
                            Title = "Atomic Habits"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Robin Sharma",
                            CategoryId = 1,
                            Description = "Very Nice Book",
                            ISBN = "978-0-123456-02-4",
                            ListPrice = 22.989999999999998,
                            Price = 20.989999999999998,
                            Price100 = 16.989999999999998,
                            Price50 = 18.989999999999998,
                            Title = "The 5 AM Club"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Ernest Cline",
                            CategoryId = 2,
                            Description = "Very Nice Book",
                            ISBN = "978-0-123456-03-5",
                            ListPrice = 28.0,
                            Price = 26.0,
                            Price100 = 22.0,
                            Price50 = 24.0,
                            Title = "Ready Player One"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Andy Weir",
                            CategoryId = 1,
                            Description = "Very Nice Book",
                            ISBN = "978-0-123456-04-6",
                            ListPrice = 30.0,
                            Price = 28.0,
                            Price100 = 24.0,
                            Price50 = 26.0,
                            Title = "The Martian"
                        });
                });

            modelBuilder.Entity("Book.Models.Product", b =>
                {
                    b.HasOne("Book.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
